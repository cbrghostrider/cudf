name: pr

on:
  push:
    branches:
      - "pull-request/[0-9]+"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pr-builder:
    needs:
      - checks
      - conda-cpp-build
      - conda-cpp-checks
      - conda-cpp-tests
      - conda-python-build
      - conda-python-cudf-tests
      - conda-python-other-tests
      - conda-java-tests
      - conda-notebook-tests
      - docs-build
      - wheel-build-cudf
      - wheel-tests-cudf
      - wheel-build-dask-cudf
      - wheel-tests-dask-cudf
      - devcontainer
      - unit-tests-cudf-pandas
      - pandas-tests
      - pandas-tests-diff
      - pandas-tests-diff-comment
      - pandas-tests-diff-comment1
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/pr-builder.yaml@branch-24.06
  checks:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/checks.yaml@branch-24.06
    with:
      enable_check_generated_files: false
  conda-cpp-build:
    needs: checks
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-cpp-build.yaml@branch-24.06
    with:
      build_type: pull-request
  conda-cpp-checks:
    needs: conda-cpp-build
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-cpp-post-build-checks.yaml@branch-24.06
    with:
      build_type: pull-request
      enable_check_symbols: true
  conda-cpp-tests:
    needs: conda-cpp-build
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-cpp-tests.yaml@branch-24.06
    with:
      build_type: pull-request
  conda-python-build:
    needs: conda-cpp-build
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-python-build.yaml@branch-24.06
    with:
      build_type: pull-request
  conda-python-cudf-tests:
    needs: conda-python-build
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-python-tests.yaml@branch-24.06
    with:
      build_type: pull-request
      script: "ci/test_python_cudf.sh"
  conda-python-other-tests:
    # Tests for dask_cudf, custreamz, cudf_kafka are separated for CI parallelism
    needs: conda-python-build
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-python-tests.yaml@branch-24.06
    with:
      build_type: pull-request
      script: "ci/test_python_other.sh"
  conda-java-tests:
    needs: conda-cpp-build
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/custom-job.yaml@branch-24.06
    with:
      build_type: pull-request
      node_type: "gpu-v100-latest-1"
      arch: "amd64"
      container_image: "rapidsai/ci-conda:latest"
      run_script: "ci/test_java.sh"
  conda-notebook-tests:
    needs: conda-python-build
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/custom-job.yaml@branch-24.06
    with:
      build_type: pull-request
      node_type: "gpu-v100-latest-1"
      arch: "amd64"
      container_image: "rapidsai/ci-conda:latest"
      run_script: "ci/test_notebooks.sh"
  docs-build:
    needs: conda-python-build
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/custom-job.yaml@branch-24.06
    with:
      build_type: pull-request
      node_type: "gpu-v100-latest-1"
      arch: "amd64"
      container_image: "rapidsai/ci-conda:latest"
      run_script: "ci/build_docs.sh"
  wheel-build-cudf:
    needs: checks
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@branch-24.06
    with:
      build_type: pull-request
      script: "ci/build_wheel_cudf.sh"
  wheel-tests-cudf:
    needs: wheel-build-cudf
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-test.yaml@branch-24.06
    with:
      build_type: pull-request
      script: ci/test_wheel_cudf.sh
  wheel-build-dask-cudf:
    needs: wheel-build-cudf
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@branch-24.06
    with:
      # This selects "ARCH=amd64 + the latest supported Python + CUDA".
      matrix_filter: map(select(.ARCH == "amd64")) | group_by(.CUDA_VER|split(".")|map(tonumber)|.[0]) | map(max_by([(.PY_VER|split(".")|map(tonumber)), (.CUDA_VER|split(".")|map(tonumber))]))
      build_type: pull-request
      script: "ci/build_wheel_dask_cudf.sh"
  wheel-tests-dask-cudf:
    needs: wheel-build-dask-cudf
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-test.yaml@branch-24.06
    with:
      # This selects "ARCH=amd64 + the latest supported Python + CUDA".
      matrix_filter: map(select(.ARCH == "amd64")) | group_by(.CUDA_VER|split(".")|map(tonumber)|.[0]) | map(max_by([(.PY_VER|split(".")|map(tonumber)), (.CUDA_VER|split(".")|map(tonumber))]))
      build_type: pull-request
      script: ci/test_wheel_dask_cudf.sh
  devcontainer:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/build-in-devcontainer.yaml@branch-24.06
    with:
      arch: '["amd64"]'
      cuda: '["12.2"]'
      build_command: |
        sccache -z;
        build-all -DBUILD_BENCHMARKS=ON --verbose;
        sccache -s;
  unit-tests-cudf-pandas:
    needs: wheel-build-cudf
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-test.yaml@branch-24.06
    with:
      matrix_filter: map(select(.ARCH == "amd64")) | group_by(.CUDA_VER|split(".")|map(tonumber)|.[0]) | map(max_by([(.PY_VER|split(".")|map(tonumber)), (.CUDA_VER|split(".")|map(tonumber))]))
      build_type: pull-request
      script: ci/cudf_pandas_scripts/run_tests.sh
  pandas-tests:
    # run the Pandas unit tests using PR branch
    # needs: wheel-build-cudf
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-test.yaml@branch-24.06
    with:
      matrix_filter: map(select(.ARCH == "amd64")) | group_by(.CUDA_VER|split(".")|map(tonumber)|.[0]) | map(max_by([(.PY_VER|split(".")|map(tonumber)), (.CUDA_VER|split(".")|map(tonumber))]))
      build_type: pull-request
      script: ci/cudf_pandas_scripts/pandas-tests/run.sh pr
      # Hide test failures because they exceed the GITHUB_STEP_SUMMARY output limit.
      test_summary_show: "none"
  pandas-tests-diff:
    # diff the results of running the Pandas unit tests and publish a job summary
    needs: pandas-tests
    secrets: inherit
    # This branch exports a `job_output` output that the downstream job reads.
    uses: rapidsai/shared-workflows/.github/workflows/custom-job.yaml@patch-1
    with:
      node_type: cpu4
      build_type: pull-request
      run_script: ci/cudf_pandas_scripts/pandas-tests/diff.sh
  pandas-tests-diff-comment:
   # Post comment of pass/fail rate on PR
   runs-on: ubuntu-latest
  #  needs: pandas-tests-diff
   steps:
     - name: Configure AWS Credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: 'us-west-2' # Replace with the correct AWS region
     - name: Download file from URL
       run: |
         aws s3 cp "s3://rapids-downloads/ci/cudf/pull-request/15369/6f62013//__w/cudf/cudf/artifacts/summary.txt" summary.txt
     - name: Prepare comment content
       id: prepare_comment
       run: |
         content=$(cat summary.txt)
         content="${content//'%'/'%25'}"
         content="${content//$'\n'/'%0A'}"
         content="${content//$'\r'/'%0D'}"
         echo "::set-output name=comment::$content"
     - uses: actions/github-script@v6
       with:
         github-token: ${{ secrets.GITHUB_TOKEN }}
        #  script: |
        #    const branch = process.env.GITHUB_REF_NAME;
        #    const prBranchPattern = new RegExp("^pull-request/[0-9]+$");
        #    if (!branch.match(prBranchPattern)) {
        #      throw new Error(`${branch} does not match PR branch pattern.`);
        #    }
        #    const summary_url = `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
        #    const prNumber = branch.split("/")[1];
        #    const job_output = `${{ needs.pandas-tests-diff.outputs.job_output }}`;
        #    github.rest.issues.createComment({
        #      issue_number: prNumber,
        #      owner: context.repo.owner,
        #      repo: context.repo.repo,
        #      body: job_output
        #    })
         script: |
            const branch = process.env.GITHUB_REF_NAME;
            const prNumber = branch.split("/")[1];
            const comment = `${{ steps.prepare_comment.outputs.comment }}`;
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
  pandas-tests-diff-comment1:
    # Post comment of pass/fail rate on PR
    runs-on: ubuntu-latest
    #  needs: pandas-tests-diff
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Comment on PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          #!/bin/bash

          # Your custom logic or commands here

          # Use GitHub CLI to comment on the PR
          echo "Posting a comment to PR #${PR_NUMBER}"
          gh pr comment "15369" --body "Thank you for your contribution!" --repo ${{ github.repository }}
